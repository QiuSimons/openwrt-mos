#!/bin/sh /etc/rc.common
# Copyright (C) 2020 IrineSistiana

START=90
USE_PROCD=1

#####  ONLY CHANGE THIS BLOCK  ######
PROG=/usr/bin/mosdns # where is mosdns
RES_DIR=/etc/mosdns/ # resource dir / working dir / the dir where you store ip/domain lists
CONF=./config.yaml   # where is the config file, it can be a relative path to $RES_DIR
CRON_FILE=/etc/crontabs/root
#####  ONLY CHANGE THIS BLOCK  ######

inital_conf()
{
	config_load "MosDNS"
	config_get "enabled" "MosDNS" "enabled" "0"
}
service_triggers()
{
	procd_add_reload_trigger "MosDNS"
}

restore_setting()
{
	sed -i "/list server/d" /etc/config/dhcp
	sed -i "/dhcp_option/d" /etc/config/dhcp
	uci set dhcp.@dnsmasq[0].noresolv="0"
	uci commit dhcp
	uci set shadowsocksr.@global[0].pdnsd_enable='1'
	uci set shadowsocksr.@global[0].tunnel_forward='8.8.4.4:53'
	uci commit shadowsocksr
	uci del network.lan.dns
	uci del network.wan.peerdns
	uci del network.wan.dns
	uci commit network
}

prepare_setting()
{
	sed -i "/list server/d" /etc/config/dhcp
	uci add_list dhcp.@dnsmasq[0].server='127.0.0.1#5335'
	uci set dhcp.@dnsmasq[0].rebind_protection='0'
	lanip="$(uci get network.lan.ipaddr)"
	sed -i "/dhcp_option/d" /etc/config/dhcp
	sed -i "/dhcpv6/a\\\tlist dhcp_option '6,$lanip'" /etc/config/dhcp
	uci set dhcp.@dnsmasq[0].noresolv="1"
	uci commit dhcp
	uci set shadowsocksr.@global[0].pdnsd_enable='0'
	uci del shadowsocksr.@global[0].tunnel_forward
	uci commit shadowsocksr
	sed -i "/list dns/d" /etc/config/network
	uci set network.wan.peerdns='0'
	uci add_list network.wan.dns='127.0.0.1'
	uci add_list network.lan.dns='127.0.0.1'
	uci commit network
}

restart_others()
{
    	/etc/init.d/network reload
   	/etc/init.d/dnsmasq reload
    	ps | grep ssrplus |grep -v grep
   	if [ $? -eq 0 ];  then
		/etc/init.d/shadowsocksr restart
   	fi
}

reload_service()
{
	stop
    	sleep 2s
    	echo "MosDNS is restarted!"
    	start
}

setcron()
{
chmod 755 /etc/mosdns/mosupdater.sh
   [ "$(tail -n1 /etc/crontabs/root | wc -l)" -eq 0 ] && [ -n "$(cat /etc/crontabs/root 2>/dev/null)" ] && echo >> /etc/crontabs/root
   [ -z "$(grep "mosupdater.sh" "$CRON_FILE" 2>/dev/null)" ] && {
      [ "$(uci -q get MosDNS.config.geo_auto_update)" -eq 1 ] && echo "0 $(uci -q get MosDNS.config.geo_update_day_time) * * $(uci -q get MosDNS.config.geo_update_week_time) /etc/mosdns/mosupdater.sh" >> $CRON_FILE
   }
   crontab $CRON_FILE
}

delcron()
{
   sed -i '/mosupdater.sh/d' $CRON_FILE 2>/dev/null
   /etc/init.d/cron restart
}

start_service() {
	
	# Reading config
	inital_conf
	if [ "$enabled" -eq 0 ]; then
        firstblood=$(uci -q get MosDNS.MosDNS.not_first_start)
		[ "${firstblood}" = "0" ] && restore_setting
		[ "${firstblood}" = "0" ] && restart_others
		uci set MosDNS.MosDNS.not_first_start='1'
		uci commit MosDNS
        	echo "MosDNS has turned off"
        return 1
    fi
	procd_open_instance MOSDNS
	procd_set_param command $PROG -dir $RES_DIR -c $CONF
	procd_set_param user root
	procd_set_param stdout 1
	procd_set_param stderr 1
	procd_set_param respawn "${respawn_threshold:-3600}" "${respawn_timeout:-5}" "${respawn_retry:-5}"
	procd_close_instance MOSDNS
	
	prepare_setting
	restart_others
	
	echo "MosDNS turn on"
	echo "enabled="$enabled""

	
}

stop_service()
{

	killall -q mosdns
	echo "MosDNS turn off"
	echo "enabled="$enabled""
	
	config_load "MosDNS"
    	local enabled
    	config_get_bool enabled MosDNS enabled 0
	if [ "$enabled" -eq 0 ]; then
		restore_setting
        	restart_others
    	fi
	
}
